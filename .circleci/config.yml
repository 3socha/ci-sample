version: 2.1
executors:
  builder:
    machine:
      image: ubuntu-2004:202111-01  # https://circleci.com/developer/machine/image/ubuntu-2004

commands:  # https://circleci.com/docs/ja/2.0/reusing-config/
  build-image:
    parameters:
      # docker-image-name:
      #   type: string
      docker-arch:
        type: string
      node-arch:
        type: string
      node-version:
        default: "v16.13.1"
        type: string
    steps:
      - checkout
      - run:
          name: Build a docker image
          command: |
            docker image build --tag $DOCKER_IMAGE_NAME:<< parameters.docker-arch >> --progress plain .
      - run:
          name: Install test tools
          command: |
            sudo apt update -qq
            sudo apt install -y -qq moreutils
            mkdir ~/opt
            curl -sfSL --retry 3 https://nodejs.org/dist/<< parameters.node-version >>/node-<< parameters.node-version >>-linux-<< parameters.node-arch >>.tar.gz -o nodejs.tar.gz
            tar xf nodejs.tar.gz -C ~/opt --strip-components 1
            PATH=$PATH:~/opt/bin npm install --global --silent --no-progress tap-xunit
            echo "export PATH=$PATH:~/opt/bin" >> $BASH_ENV
      - run:
          name: Test a docker image
          command: |
            mkdir ~/reports
            docker container run --rm --net none -v $(pwd):/root/src $DOCKER_IMAGE_NAME:<< parameters.docker-arch >> /bin/bash -c "bats --tap /root/src/test.bats" \
              | pee cat "tap-xunit > ~/reports/result.xml"
      - store_test_results:
          path: ~/reports
      - run: |
          if [ "$CIRCLE_BRANCH" != "main" ]; then
            circleci-agent step halt
          fi
      - run:
          name: Login to Docker Hub
          command: |
            echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin
      - run:
          name: Push a docker image
          command: |
            docker push $DOCKER_IMAGE_NAME:<< parameters.docker-arch >>

jobs:
  build-x64:
    executor: builder
    environment:
      DOCKER_BUILDKIT: '1'
      DOCKER_IMAGE_NAME: 3socha/ci-sample
    resource_class: large  # 4vCPU, 8GB RAM; https://circleci.com/docs/ja/2.0/configuration-reference/#resourceclass
    steps:
      - build-image:
          # docker-image-name: 3socha/ci-sample
          docker-arch: amd64
          node-arch: x64

  build-arm64:
    executor: builder
    resource_class: arm.medium  # 2vCPU, 8GB RAM; https://circleci.com/docs/ja/2.0/arm-resources/
    environment:
      DOCKER_BUILDKIT: '1'
      DOCKER_IMAGE_NAME: 3socha/ci-sample
    steps:
      - build-image:
          # docker-image-name: 3socha/ci-sample
          docker-arch: arm64
          node-arch: arm64

  push-manifest:
    docker:
      - image: cimg/base:2021.12-20.04  # CircleCI Convenience Images: https://circleci.com/docs/2.0/next-gen-migration-guide/; https://hub.docker.com/r/cimg/base
    environment:
      DOCKER_IMAGE_NAME: 3socha/ci-sample
    steps:
      - run: |
          if [ "$CIRCLE_BRANCH" != "main" ]; then
            circleci-agent step halt
          fi
      # - setup_remote_docker:
      #     version: "20.10.11"  # https://circleci.com/docs/2.0/building-docker-images/#docker-version
      - run:
          name: Login to Docker Hub
          command: |
            echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin
      - run:
          name: update manifest
          command: |
            date_tag=$(date +%Y%m%d)
            docker manifest create $DOCKER_IMAGE_NAME:latest $DOCKER_IMAGE_NAME:amd64 $DOCKER_IMAGE_NAME:arm64 --amend
            docker manifest push $DOCKER_IMAGE_NAME:latest
            docker manifest create $DOCKER_IMAGE_NAME:$date_tag $DOCKER_IMAGE_NAME:amd64 $DOCKER_IMAGE_NAME:arm64 --amend
            docker manifest push $DOCKER_IMAGE_NAME:$date_tag

workflows:
  version: 2.1
  commit-workflow:
    jobs:
      - build-x64
      - build-arm64
      - push-manifest:
          requires:
            - build-x64
            - build-arm64

  scheduled-workflow:
    triggers:
      - schedule:
          cron: "15 2 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - build-x64
      - build-arm64
      - push-manifest:
          requires:
            - build-x64
            - build-arm64
